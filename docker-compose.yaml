version: '3.9'

services:

  traefik:
    image: traefik:v3.3
    container_name: traefik
    restart: always
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - e-commerce-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.0
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch
    networks:
      - elk
      - e-commerce-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    container_name: kibana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kibana.rule=Host(`kibana.example.com`)"
      - "traefik.http.services.kibana.loadbalancer.server.port=5601"
    depends_on:
      - elasticsearch
    networks:
      - elk
      - e-commerce-network

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: durka
      POSTGRES_DB: e-commerce-database
    ports:
      - "5432:5432" 
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - e-commerce-network

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth
    environment:
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC=notification
      - DB_URL=postgres://postgres:durka@postgres:5432/e-commerce-database?sslmode=disable
      - JWT_SECRET=super-puper-ultra-top-secret
      - PORT=:8089
      - ELK_URL=logstash:5000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`auth.example.com`)"
      - "traefik.http.services.auth.loadbalancer.server.port=8089"
    depends_on:
      - postgres
      - elasticsearch
      - kibana
      - logstash
    networks:
      - e-commerce-network    
    
  cart-service:
    build:
      context: ./cart-service
      dockerfile: Dockerfile
    container_name: cart
    environment:
      - DB_URL=postgres://postgres:durka@postgres:5432/e-commerce-database?sslmode=disable
      - PORT=:8081
      - ELK_URL=logstash:5000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cart.rule=Host(`cart.example.com`)"
      - "traefik.http.services.cart.loadbalancer.server.port=8081"
    depends_on:
      - postgres
      - elasticsearch
      - kibana
      - logstash
    networks:
      - e-commerce-network
  
  catalog-service:
    build:
      context: ./catalog-service
      dockerfile: Dockerfile
    container_name: catalog
    environment:
      - DB_URL=postgres://postgres:durka@postgres:5432/e-commerce-database?sslmode=disable
      - PORT=:8082
      - ELK_URL=logstash:5000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.catalog.rule=Host(`catalog.example.com`)"
      - "traefik.http.services.catalog.loadbalancer.server.port=8082"
    depends_on:
      - postgres
      - elasticsearch
      - kibana
      - logstash
    networks:
      - e-commerce-network
  
  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: notification
    environment:
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC=notification
      - DB_URL=postgres://postgres:durka@postgres:5432/e-commerce-database?sslmode=disable
      - PORT=:8083
      - MAIL=hotelbooking02@mail.ru
      - EMAIL_PASSWORD=hPWFLzDD5mqWMPy1G1ty
      - SIZE_CHAN=50
      - COUNT_WORKER=5
      - ELK_URL=logstash:5000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.notification.rule=Host(`notification.example.com`)"
      - "traefik.http.services.notification.loadbalancer.server.port=8083"
    depends_on:
      - postgres
      - elasticsearch
      - kibana
      - logstash
    networks:
      - e-commerce-network
  
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order
    environment:
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC=notification
      - DB_URL=postgres://postgres:durka@postgres:5432/e-commerce-database?sslmode=disable
      - PORT=:8084
      - ELK_URL=logstash:5000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.order.rule=Host(`order.example.com`)"
      - "traefik.http.services.order.loadbalancer.server.port=8084"
    depends_on:
      - postgres
      - elasticsearch
      - kibana
      - logstash
    networks:
      - e-commerce-network
  
  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: payment
    environment:
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC=notification
      - DB_URL=postgres://postgres:durka@postgres:5432/e-commerce-database?sslmode=disable
      - PORT=:8085
      - ELK_URL=logstash:5000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.payment.rule=Host(`payment.example.com`)"
      - "traefik.http.services.payment.loadbalancer.server.port=8085"
    depends_on:
      - postgres
      - elasticsearch
      - kibana
      - logstash
    networks:
      - e-commerce-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`frontend.example.com`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    networks:
      - e-commerce-network

volumes:
  postgres_data:

networks:
  e-commerce-network:
    driver: bridge
  elk:
    driver: bridge
