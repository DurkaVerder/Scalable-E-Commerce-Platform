version: '3.9'

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.0
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch
    networks:
      - elk
      - e-commerce-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elk

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: durka
      POSTGRES_DB: e-commerce-database
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - e-commerce-network

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth
    environment:
      - DB_URL=postgres://postgres:durka@postgres:5432/e-commerce-database?sslmode=disable
      - JWT_SECRET=super-puper-ultra-top-secret
      - PORT=:8080
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - elasticsearch
      - kibana
      - logstash
    networks:
      - e-commerce-network    
    
  cart-service:
    build:
      context: ./cart-service
      dockerfile: Dockerfile
    container_name: cart
    environment:
      - DB_URL=postgres://postgres:durka@postgres:5432/e-commerce-database?sslmode=disable
      - PORT=:8081
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - elasticsearch
      - kibana
      - logstash
    networks:
      - e-commerce-network
  
  catalog-service:
    build:
      context: ./catalog-service
      dockerfile: Dockerfile
    container_name: catalog
    environment:
      - DB_URL=postgres://postgres:durka@postgres:5432/e-commerce-database?sslmode=disable
      - PORT=:8082
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - elasticsearch
      - kibana
      - logstash
    networks:
      - e-commerce-network
  
  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: notification
    environment:
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC=notification
      - DB_URL=postgres://postgres:durka@postgres:5432/e-commerce-database?sslmode=disable
      - PORT=:8083
      - MAIL=hotelbooking02@mail.ru
      - EMAIL_PASSWORD=hPWFLzDD5mqWMPy1G1ty
      - SIZE_CHAN=50
      - COUNT_WORKER=5
    ports:
      - "8083:8083"
    depends_on:
      - postgres
      - elasticsearch
      - kibana
      - logstash
    networks:
      - e-commerce-network
  

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order
    environment:
      - DB_URL=postgres://postgres:durka@postgres:5432/e-commerce-database?sslmode=disable
      - PORT=:8084
    ports:
      - "8084:8084"
    depends_on:
      - postgres
      - elasticsearch
      - kibana
      - logstash
    networks:
      - e-commerce-network
  
  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: payment
    environment:
      - DB_URL=postgres://postgres:durka@postgres:5432/e-commerce-database?sslmode=disable
      - PORT=:8085
    ports:
      - "8085:8085"
    depends_on:
      - postgres
      - elasticsearch
      - kibana
      - logstash
    networks:
      - e-commerce-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    networks:
      - e-commerce-network

volumes:
  postgres_data:

networks:
  e-commerce-network:
    driver: bridge
  elk:
    driver: bridge
      
